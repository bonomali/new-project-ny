plugins {
	id 'com.github.node-gradle.node' version '2.2.3'
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'org.google'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	runtimeOnly 'com.h2database:h2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

node {
    version = '14.0.0'
    npmVersion = '6.14.4'
    download = true
}

test {
	useJUnitPlatform()
}

task installNodeDeps(type: NpmTask) {
	group = "React App"
	description = "Installs Node dependencies for frontend/"
	workingDir = file('frontend')
	args = ['install']
}

task buildFrontend(type: NpmTask) {
	group = "React App"
	description = "Builds production version of the React app"
	dependsOn installNodeDeps
	workingDir = file('frontend')
	args = ['run', 'build']
}

task packFrontend(type: Copy) {
	group = "React App"
	description = "Adds compiled React app to Jar path"
	dependsOn buildFrontend
	from 'frontend/build'
	into 'build/node/public'
}

sourceSets {
	main {
		resources {
			compiledBy packFrontend
			srcDirs 'build/node'
		}
	}
}

classes {
	dependsOn packFrontend
}

clean {
	delete 'frontend/build'
}
